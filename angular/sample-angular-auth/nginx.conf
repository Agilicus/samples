worker_processes  1;
error_log  /dev/stderr warn;
pid /tmp/pid;

events {
    worker_connections  500;
}


http {

    log_format json escape=json '{'
      '"time": "$time_iso8601",'
      '"downstream_remote_address": "$real_remote",'
      '"x_forward_for": "$proxy_add_x_forwarded_for",'
      '"request_id": "$http_x_request_id",'
      '"remote_user": "$remote_user",'
      '"bytes_sent": $bytes_sent,'
      '"start_time": $request_time,'
      '"response_code": $status,'
      '"authority": "$host",'
      '"protocol": "$server_protocol",'
      '"path": "$uri",'
      '"request_query": "$args",'
      '"request_length": $request_length,'
      '"duration": $request_time,'
      '"method": "$request_method",'
      '"http_referrer": "$http_referer",'
      '"http_user_agent": "$http_user_agent"'
    '}';

    lua_package_path "/usr/local/site/lualib/?.lua;/rules/?.lua;;";
    lua_package_cpath "/usr/local/lua/5.1/?.so;;";

    lua_ssl_verify_depth 2;
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    init_by_lua_block {
        -- use resty.core for performance improvement, see the status note above
        require "resty.core"

        require "resty.cookie"

        -- require the base module
        local lua_resty_waf = require "resty.waf"

        -- perform some preloading and optimization
        lua_resty_waf.init()

        ngx.log(ngx.STDERR, "STARTED")
    }

    map $http_user_agent $excluded_ua {
        ~kube-probe  0;
        ~GoogleStackdriverMonitoring-UptimeChecks 0;
        default      1;
    }

    access_log  /dev/stdout json if=$excluded_ua;

    sendfile on;

    server_tokens off;
    more_clear_headers 'Server';

    client_body_temp_path /tmp/nginx 1 2;
    proxy_temp_path /tmp/nginx-proxy;
    fastcgi_temp_path /tmp/nginx-fastcgi;
    uwsgi_temp_path /tmp/nginx-uwsgi;
    scgi_temp_path /tmp/nginx-scgi;

    # Expires map
    map $sent_http_content_type $expires {
	default                    off;
	text/html                  epoch; #means no cache, as it is not a static page
	text/css                   max;
	application/javascript     max;
	font/woff2                 max;
	font/                      max;
	assets/                    max;
	~image/                    30d;
    }


    server {
        listen 5000;
        server_name  localhost;

	error_log    /dev/stderr;

        expires $expires;

        root   /web;
        index  index.html index.htm;
        include /usr/local/openresty/conf/mime.types;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        set_by_lua_block $cspNonce  {
            local base64 = require('ngx.base64')
            local file = assert(io.open('/dev/urandom', 'rb'))
            local bytes = file:read(32)
            file:close()
            return base64.encode_base64url(bytes)
        }

        set_by_lua_block $real_remote {
            if ngx.var.http_x_forwarded_for then
              for r in ngx.var.http_x_forwarded_for:gmatch('([^,]+)') do
                return r
              end
            end
            return ngx.var.remote_addr
        }

        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'none'; manifest-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self'; font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com; connect-src *; script-src 'self' 'nonce-$cspNonce'; frame-src 'self'; report-uri /.well-known/csp-violation-report-endpoint/;";
        add_header Feature-Policy "vibrate 'self'; usermedia 'none'; sync-xhr 'self'; notifications 'self'; microphone 'none'; camera 'none'; payment 'none';";
        # overridden in istio
        add_header Access-Control-Allow-Origin *;
        add_header Vary Origin;

        location /index.html {


            sub_filter_once off;
            sub_filter_types text/html;
            sub_filter_last_modified on;
            sub_filter '<script nonce=CSP-NONCE' '<script nonce="$cspNonce"';

            # rewrite_by_lua_block { ngx.var.real_remote = "Aoo" }
            try_files $uri /index.html;
        }
        location / {
            # rewrite_by_lua_block { ngx.var.real_remote = "foo" }
            try_files $uri $uri/ /index.html;
        }

        # Receive and blackhole the csp reports, they will be available in access log
        location /.well-known/csp-violation-report-endpoint/ {
          add_header Content-Type text/plain;
          return 204;
        }
    }
}
